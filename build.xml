<project name="hdfs" default="dist" basedir=".">
    <description>
        simple example build file
    </description>
    <!-- set global properties for this build -->
    <property name="src" location="src"/>
    <property name="tests" location="tests"/>
    <property name="build" location="build"/>
    <property name="test-build" location="test-build"/>
    <property name="dist"  location="dist"/>

    <target name="init">
        <!-- Create the time stamp -->
        <tstamp/>
        <!-- Create the build directory structure used by compile -->
        <mkdir dir="${build}"/>
        <mkdir dir="${test-build}"/>
    </target>

    <path id="hadoop-classpath">
        <fileset dir="lib/">
            <include name="*.jar"/>
        </fileset>
    </path>

    <target name="compile" depends="init"
        description="compile the source " >
        <!-- Compile the java code from ${src} into ${build} -->

        <javac destdir="${build}" debug="true">
            <src path="${src}" />
            <classpath refid="hadoop-classpath"/>
        </javac>
    </target>

    <target name="dist" depends="compile"
        description="generate the distribution" >
        <!-- Create the distribution directory -->
        <mkdir dir="${dist}/lib"/>

        <!-- Put everything in ${build} into the MyProject-${DSTAMP}.jar file -->
        <jar jarfile="${dist}/lib/mozsvc-hdfs-${DSTAMP}.jar" basedir="${build}"/>
    </target>

    <target name="test">
        <java classname="com.mozilla.services.hdfs.TestHDFS">
            <classpath>
                <fileset dir="test_jars" includes="*.jar"/>
                <fileset dir="lib" includes="**/*.jar"/>
                <fileset dir="${dist}/lib/" includes="*.jar" />
                <!-- 
                     Not sure why, but on apple machines, you rt.jar
                     isn't in the classpath already, and the file isn't called rt.jar on apple - it's classes.jar
                -->
                <fileset dir="${JAVA_HOME}/bundle/Classes" includes="classes.jar" />
            </classpath>
        </java>
    </target>

    <target name="clean"
        description="clean up" >
        <!-- Delete the ${build} and ${dist} directory trees -->
        <delete dir="${build}"/>
        <delete dir="${dist}"/>
    </target>
</project>
